Phase,TaskID,Title,Branch,Commit,CopilotPrompt
Phase 0 — Pre-flight,T001,Bootstrap repo,chore/init,chore: initialize matex monorepo,Create a Next.js 14 (App Router) + TypeScript project named 'matex'. Add TailwindCSS. Initialize git with MIT license and basic README.
Phase 0 — Pre-flight,T002,VS Code workspace & settings,chore/vscode-setup,chore: add vscode settings and recommended extensions,"Add .vscode/extensions.json recommending: GitHub Copilot, ESLint, Prettier, Tailwind CSS IntelliSense, EditorConfig, dotenv. Add .vscode/settings.json to format on save with Prettier and tailwind class sorting."
Phase 0 — Pre-flight,T003,EditorConfig + Prettier,chore/formatting,chore: add .editorconfig and prettier config,"Create .editorconfig and .prettierrc. Enforce 2 spaces, LF, single quotes, Prettier integration for TS/JS/MD/JSON."
Phase 0 — Pre-flight,T004,Env templates,chore/env,chore: add .env.example,"Add .env.example with NEXT_PUBLIC_SUPABASE_URL, NEXT_PUBLIC_SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY, STRIPE_SECRET_KEY, STRIPE_WEBHOOK_SECRET."
Phase 1 — Supabase,T005,Supabase client helpers,feat/lib-supabase,feat: add server/client supabase helpers,Create lib/supabaseServer.ts and lib/supabaseClient.ts using @supabase/supabase-js for server (service role) and client (anon key).
Phase 1 — Supabase,T006,Profiles + RBAC schema,db/profiles,db: add profiles table and RLS,"SQL migration for profiles(id uuid pk refs auth.users, full_name, phone, role enum buyer|seller|both|admin, kyc_status enum, company_name, created_at). Enable RLS: users read/update own; admins all."
Phase 1 — Supabase,T007,Listings + Images schema,db/listings,db: add listings and listing_images,"Create listings(id, seller_id, title, description, material, condition, quantity numeric, unit, pricing_type fixed|auction, price_cad, buy_now_cad, location_city, location_province, status, created_at) and listing_images(listing_id,url,sort_order). RLS: seller CRUD own; public read active."
Phase 1 — Supabase,T008,Auctions & Bids schema,db/auctions-bids,db: add auctions and bids tables,"Create auctions(listing_id unique, start_at, end_at, min_increment_cad, soft_close_seconds) and bids(auction_id, bidder_id, amount_cad, created_at). Indexes on auction_id, created_at."
Phase 1 — Supabase,T009,Orders schema,db/orders,db: add orders table,"Create orders(listing_id, buyer_id, seller_id, type fixed|auction, total_cad, status pending|paid|cancelled|fulfilled, stripe_payment_intent, created_at). RLS buyer/seller/admin."
Phase 1 — Supabase,T010,Inspections schema,db/inspections,db: add inspections and bookings,"Create inspections(listing_id, slot_at timestamptz, capacity int) and inspection_bookings(inspection_id, user_id, status booked|attended|no_show|cancelled, booked_at)."
Phase 1 — Supabase,T011,App settings schema,db/app-settings,db: add app_settings and kyc_fields,"Create app_settings(key text pk, value jsonb, updated_by, updated_at) and kyc_fields(role seller|buyer, name, label, type text|number|date|file|select, required, options jsonb, sort_order)."
Phase 1 — Supabase,T012,Notifications schema,db/notifications,db: add notifications & templates,"Create notification_templates(code unique, channel inapp|email|sms, subject, body_md, is_active, updated_at) and notifications(user_id, type info|warning|success|error, title, message, link, is_read, created_at)."
Phase 1 — Supabase,T013,Terms acceptances,db/legal,db: add terms_acceptances,"Create terms_acceptances(user_id, terms_version text, accepted_at). RLS: user reads own, admin all."
Phase 1 — Supabase,T014,Commit migrations,db/commit,db: commit all migrations,"Export SQL migration files and commit to repo, ensuring idempotent scripts."
Phase 2 — Settings,T015,GET /api/settings,feat/api-settings-get,feat: GET /api/settings,"Implement /app/api/settings/route.ts: accept ?keys=a,b,c and return merged JSON from app_settings with 3-min in-memory cache; server-only with service role."
Phase 2 — Settings,T016,POST /api/settings (admin),feat/api-settings-post,feat: POST /api/settings (admin only),Upsert multiple settings keys atomically; invalidate cache; admin role required; return updated keys.
Phase 2 — Settings,T017,Seed default settings,chore/seed-settings,chore: seed app_settings defaults,"Seed auction.soft_close_seconds=120, auction.min_increment_strategy='fixed', auction.min_increment_value=5, auction.deposit_required=true, auction.deposit_percent=0.1, fees.transaction_percent=0.04, notifications.channels=['inapp','email']."
Phase 2 — Settings,T018,Audit log table,db/audit-log,db: add audit_log table,"Create audit_log(id, actor_id, action, before jsonb, after jsonb, created_at). Write helper to log settings changes."
Phase 3 — Auth & KYC,T019,Auth wiring (server/client),feat/auth,feat: supabase auth context and hooks,Create auth utilities to read session server-side and client-side; redirect unauthenticated users for protected routes.
Phase 3 — Auth & KYC,T020,Dynamic onboarding (Buyer/Seller),feat/onboarding-forms,feat: onboarding forms with dynamic KYC fields,Add /onboarding/{buyer|seller} reading kyc_fields from DB to render dynamic forms with validation and file upload to storage.
Phase 3 — Auth & KYC,T021,KYC upload & review status,feat/kyc-upload,feat: KYC upload and status page,"Implement document upload (ID/business license), store metadata, show 'pending/approved/rejected' on profile."
Phase 3 — Auth & KYC,T022,Terms consent gate,feat/terms-consent,feat: require T&C consent on signup and before bidding,Add modal to accept latest terms_version from app_settings; store record in terms_acceptances; block actions until accepted.
Phase 4 — Listings,T023,Create listing UI,feat/listing-create,feat: listing create form + upload,"Build /sell/new with title, material, qty, unit, pricing_type fixed|auction, price, location, images. Upload to Supabase Storage."
Phase 4 — Listings,T024,Browse listings page,feat/listings-browse,feat: listings grid with filters,"Implement /browse with filters (material, price range, type, location). SSR data with pagination."
Phase 4 — Listings,T025,Listing detail page,feat/listing-detail,feat: listing detail page,"Show gallery, specs, seller card, inspection slots, pricing area (buy now / bid)."
Phase 4 — Listings,T026,Search & FTS,feat/listings-search,feat: full-text search on listings,Add Postgres FTS on title/description/material; implement search bar and highlight matches.
Phase 5 — Auctions,T027,Auction helpers,feat/auction-hooks,feat: auction status & minNextBid helpers,"Compute isActive, timeLeft, currentHighBid, minNextBid (fixed or percent) from settings."
Phase 5 — Auctions,T028,POST /api/auctions/[id]/bid,feat/api-bid,feat: POST /api/auctions/[id]/bid with soft-close,"Validate auction active, user deposit authorized, amount >= minNextBid. Insert bid. If remaining <= soft_close_seconds, extend end_at. Return new state."
Phase 5 — Auctions,T029,Realtime bids subscription,feat/bid-realtime,feat: live bid feed via Supabase Realtime,Subscribe to bids by auction_id; update current price and history live; optimistic UI on place bid.
Phase 5 — Auctions,T030,Outbid notifications,feat/outbid-notify,feat: trigger outbid notifications,"On new highest bid, notify previous highest bidder via in-app/email using notification_templates."
Phase 6 — Inspections,T031,Manage inspection slots (seller),feat/inspection-manage,feat: manage inspection slots per listing,Seller can add/remove slots with capacity and buffers from settings; validate time overlaps.
Phase 6 — Inspections,T032,Book/cancel inspection (buyer),feat/inspection-book,feat: book and cancel inspection slots,Allow booking if capacity available; prevent duplicates; show upcoming visits; notify buyer & seller.
Phase 6 — Inspections,T033,Inspection reminders,feat/inspection-reminders,feat: reminder notifications for inspections,Send reminders X hours before slot time (configurable in settings) via in-app/email.
Phase 7 — Deposits,T034,Stripe client setup,feat/stripe-setup,feat: stripe client and env keys,Create lib/stripe.ts; load keys from env; add test mode indicator on UI.
Phase 7 — Deposits,T035,Authorize deposit,feat/api-deposit,feat: POST /api/deposits/authorize,Authorize deposit (percent or flat from settings) using PaymentIntent with capture later; link to user+auction; gate bidding.
Phase 7 — Deposits,T036,Release/refund deposits,feat/deposit-release,feat: release and refund non-winning deposits,"On auction close, capture winner deposit (apply to invoice) and cancel others; implement cron/server action."
Phase 7 — Deposits,T037,Deposit status UI,feat/deposit-ui,feat: show deposit status in auction page,Show 'Deposit required/authorized' badges and CTA to authorize deposit before bidding.
Phase 8 — Payments,T038,Fixed price checkout,feat/checkout-fixed,feat: Stripe checkout for fixed listings,Create /api/checkout/fixed to create Checkout Session; create pending order; success/cancel pages and status updates.
Phase 8 — Payments,T039,Auction winner invoice,feat/invoice-auction,feat: generate invoice for auction winner,"When auction closes, create order with total = winning bid; deduct deposit; create remaining balance PaymentIntent."
Phase 8 — Payments,T040,Stripe webhooks,feat/stripe-webhooks,feat: handle Stripe webhooks,Add /api/stripe/webhook verifying signature; handle checkout.session.completed and payment_intent.succeeded; update orders.
Phase 8 — Payments,T041,Payout delay & fees,feat/payout-fees,feat: payout delay and platform fee settings,Apply fees.transaction_percent; set payout delay days from settings; reflect in order summary.
Phase 9 — Notifications,T042,Bell dropdown UI,feat/notifications-ui,feat: notifications dropdown + page,Navbar bell with unread count; dropdown last 10; /notifications list with pagination; mark-as-read.
Phase 9 — Notifications,T043,Notification triggers,feat/notifications-triggers,feat: triggers for bid/win/inspection/deposit,"Server helpers to insert notifications on: new bid, outbid, auction won, inspection booked, deposit authorized."
Phase 9 — Notifications,T044,Email renderer,feat/email-templates,feat: render email templates from DB,Compile body_md with simple templating (Handlebars-like); send via nodemailer (stub provider).
Phase 9 — Notifications,T045,User preferences,feat/notify-preferences,feat: notification preferences page,Settings page to toggle channels (inapp/email/sms) and digest frequency; store in app_settings or per-user table.
Phase 10 — Admin,T046,Admin route guard,feat/admin-gate,feat: admin role guard for /admin,Protect /admin routes; only profiles.role='admin' can access; add layout with sidebar nav.
Phase 10 — Admin,T047,Settings editor UI,feat/admin-settings,feat: admin settings editor,"CRUD editor for auction, fees, legal, inspection, notifications; JSON editor with validation and save + cache bust."
Phase 10 — Admin,T048,KYC manager,feat/admin-kyc,feat: approve/reject KYC with notes,Table of profiles with kyc_status; preview documents; approve/reject with reason; notify user; log audit.
Phase 10 — Admin,T049,Listings moderation,feat/admin-listings,feat: listings moderation & inspections overview,Search/filter listings; toggle status; view associated inspections; bulk operations.
Phase 10 — Admin,T050,Payments & deposits,feat/admin-payments,feat: deposits and payouts dashboard,Show authorized/captured/refunded deposits; order status; manual refund with confirmation and audit trail.
Phase 10 — Admin,T051,Notification templates CMS,feat/admin-templates,feat: edit notification templates,CRUD for notification_templates with preview and variables docs; simple versioning.
Phase 10 — Admin,T052,Legal CMS (Terms/Privacy),feat/admin-cms-legal,feat: CMS pages for Terms & Privacy,Editable markdown for Terms/Privacy; publish version to app_settings; force re-accept when version changes.
Phase 10 — Admin,T053,Audit log viewer,feat/admin-audit,feat: audit log viewer,"Add audit log viewer with filters by actor, action, date range."
Phase 11 — UX & Identity,T054,Brand theme & favicon,ui/brand,"ui: apply brand colors, fonts, favicon",Set Tailwind theme variables for brand palette; load Inter; add favicon and navbar logo; dark/light modes optional.
Phase 11 — UX & Identity,T055,Landing hero + CTA,ui/landing,"ui: landing hero, CTA, how-it-works","Build hero section with headline/subhead, Start Selling CTA, and 3-step how it works; responsive."
Phase 11 — UX & Identity,T056,Browse filters & URL state,ui/filters,ui: filter sidebar with URL params,"Implement filters (material, price, type, location) synced to URLSearchParams; SSR results and pagination."
Phase 11 — UX & Identity,T057,Error/empty states,ui/states,ui: 404/500 pages + empty states,Add 404/500 pages; components for empty listings/bids/notifications; friendly copy.
Phase 11 — UX & Identity,T058,Loading & skeletons,ui/loading,ui: skeleton loaders and spinners,"Add skeleton components for cards, tables; use animated shimmer; integrate spinner.gif."
Phase 12 — Data & Analytics,T059,Price trend charts,feat/analytics-prices,feat: material price trend charts,Aggregate historical winning bids by material per week; expose API; render line chart client-side with caching.
Phase 12 — Data & Analytics,T060,Trading volume tiles,feat/analytics-volumes,feat: trading volumes and active users,"Dashboard KPIs: active auctions, weekly volume, new sellers, returning buyers; server actions + caching."
Phase 12 — Data & Analytics,T061,Seller reputation score,feat/reputation-score,feat: seller reputation scoring,"Compute simple score based on fulfilment time, disputes, cancellations; show badge on seller profile."
Phase 12 — Data & Analytics,T062,Export reports CSV,feat/export-reports,feat: export analytics to CSV,Admin can export price/volume reports as CSV; streamed response.
Phase 13 — Legal & Compliance,T063,Legal pages (Terms/Privacy/Refund),legal/pages,"legal: add Terms, Privacy, Refund policy",Add markdown pages reflecting Auctioneers Act/Consumer Protection and PIPEDA; link in footer.
Phase 13 — Legal & Compliance,T064,Consent gating before bid,legal/require-consent,legal: enforce T&C consent gating,Require latest terms_version before POST /bid or /deposit; show modal to accept; record acceptance.
Phase 13 — Legal & Compliance,T065,Privacy & data retention,legal/privacy-retention,legal: document privacy & retention policy,Add section to Privacy explaining retention of bids/orders/kyc docs; provide contact for data requests.
Phase 13 — Legal & Compliance,T066,Cookie banner,legal/cookies,legal: add cookie/consent banner,Implement cookie consent banner with minimal analytics toggle; store choice.
Phase 14 — QA/Security/Perf,T067,Rate limits for APIs,sec/rate-limit,sec: add per-IP rate-limit to API routes,"Add in-memory or Upstash-based rate limiter for write endpoints: bid, deposit, checkout, settings."
Phase 14 — QA/Security/Perf,T068,Zod validation,sec/validation,sec: add zod schemas for forms/APIs,"Introduce zod schemas for listing, bid, inspection, settings; return typed errors."
Phase 14 — QA/Security/Perf,T069,RLS policy review,sec/rls-review,sec: tighten RLS policies,Audit all RLS to ensure least privilege and PII protection; add tests/queries to verify.
Phase 14 — QA/Security/Perf,T070,Accessibility pass,qa/a11y,"qa: improve a11y (aria, contrast, keyboard)","Add aria labels, focus states, contrast fixes, keyboard navigation and skip-to-content link."
Phase 14 — QA/Security/Perf,T071,Manual E2E checklist,qa/e2e-happy,qa: document manual E2E flow,Write a checklist: signup -> KYC -> create listing -> add inspection -> deposit -> bid -> win -> invoice -> pay -> fulfilment.
Phase 15 — Deployment,T072,Vercel config,ops/vercel,ops: add vercel.json and env mapping,"Add vercel.json, configure build output, and map environment variables for prod."
Phase 15 — Deployment,T073,Supabase production setup,ops/supabase-prod,ops: connect to production Supabase and run migrations,Point to prod project; run migrations; verify RLS and storage buckets; set policies.
Phase 15 — Deployment,T074,Stripe webhooks (prod),ops/stripe-webhooks,ops: configure stripe webhooks in prod,Set STRIPE_WEBHOOK_SECRET in prod; register webhook endpoints; test payment events E2E.
Phase 15 — Deployment,T075,Custom domain & SSL,ops/domain,ops: configure custom domain and SSL,Add domain DNS records; force HTTPS; redirect www→root; add security headers (HSTS).
Phase 15 — Deployment,T076,Release tag v0.1.0,release/v0.1.0,chore: tag v0.1.0 MVP,Create CHANGELOG.md with features and known limitations; create git tag v0.1.0 and push.
Phase 16 — Growth & Trust,T077,DB: escrow fields and indexes,feat/escrow-db,chore: add escrow metadata columns,"Add `escrow_status`, `escrow_amount_cad`, `escrow_release_at` to `orders` and index; migration only. Acceptance: migration runs and columns exist."
Phase 16 — Growth & Trust,T078,API: create escrow hold (authorize),feat/api-escrow-authorize,feat: POST /api/escrow/authorize,"Implement server route to create an escrow hold (link PaymentIntent id), validate order, write escrow fields. Acceptance: returns 200 and order shows escrow_status=authorized."
Phase 16 — Growth & Trust,T079,UI: escrow badge + CTA on order page,feat/ui-order-escrow-badge,feat: show escrow status,"Add badge + details row on buyer order detail (authorized/released). Acceptance: badge visible and reflects DB state."
Phase 16 — Growth & Trust,T080,Worker: escrow release trigger (skeleton),feat/escrow-worker,feat: worker to release escrow,"Create scheduled worker stub that reads `escrow_release_at` and enqueues releases; idempotent. Acceptance: worker lists eligible orders on dry-run."
Phase 16 — Growth & Trust,T081,DB: disputes table,feat/db-disputes,chore: add disputes table,"Create `disputes(id,order_id,actor_id,reason, status, created_at)` plus evidence JSONB; RLS basic. Acceptance: migration adds table."
Phase 16 — Growth & Trust,T082,API: submit dispute + evidence upload,feat/api-dispute-create,feat: POST /api/disputes,"Endpoint to create dispute, accept file upload metadata, validate order ownership; create audit_log entry. Acceptance: dispute stored and audit created."
Phase 16 — Growth & Trust,T083,Admin: disputes queue UI,feat/admin-disputes-ui,feat: admin list/process disputes,"Add /admin/disputes: list, view evidence links, change status, add notes. Acceptance: admin action updates status & logs."
Phase 16 — Growth & Trust,T084,Notifications: dispute triggers,feat/notify-dispute,feat: notify parties & admins,"Create notification_templates for dispute_submitted and dispute_resolved and trigger on create/resolve. Acceptance: notification records created."
Phase 16 — Growth & Trust,T085,DB: saved_searches table,feat/db-saved-searches,chore: add saved_searches,"Create `saved_searches(id,user_id,name,query_json,is_active,created_at)`. Acceptance: table created."
Phase 16 — Growth & Trust,T086,API: saved-search CRUD,feat/api-saved-searches,feat: /api/search/saved endpoints,"Implement authenticated CRUD for saved searches, validate JSON schema. Acceptance: user can create & list saved searches."
Phase 16 — Growth & Trust,T087,UI: save-search button + manage panel,feat/ui-saved-search-btn,feat: add save control to search bar,"Add save button to `SearchBar` and a modal to name saved search. Acceptance: creates saved_search via API."
Phase 16 — Growth & Trust,T088,DB: price_watch table,feat/db-price-watch,chore: add price_watch,"Create `price_watch(id,user_id,material,threshold_cad,is_active,created_at)`. Acceptance: migration runs."
Phase 16 — Growth & Trust,T089,Job: price-watch alert runner,feat/job-price-watch-alerts,feat: daily price-watch job,"Create cron job that evaluates conditions and enqueues notifications. Acceptance: job finds matches on dry-run."
Phase 16 — Growth & Trust,T090,UI: watch toggle on listing,feat/ui-watch-toggle,feat: add watch control to listing card,"Add a small watch icon to listing detail/card that calls watch API. Acceptance: toggling updates DB and shows toast."
Phase 16 — Growth & Trust,T091,API: seller reputation detail endpoint,feat/api-seller-reputation,feat: GET /api/sellers/:id/reputation,"Return counts: fulfilment_time_avg, disputes_count, cancellations, sample_orders. Acceptance: returns JSON summary for seller."
Phase 16 — Growth & Trust,T092,UI: reputation deep-view page,feat/ui-seller-reputation,feat: seller reputation UI,"Create a simple page under seller profile showing the API data and charts placeholder. Acceptance: page loads and shows values."
Phase 16 — Growth & Trust,T093,Helper: reputation compute helper,feat/lib-reputation-helper,feat: compute reputation metrics,"Add small helper to compute avg/percentiles used by API. Acceptance: unit test for sample data."
Phase 16 — Growth & Trust,T094,DB: RFQ (request for quote) table,feat/db-rfq,chore: add rfq table,"Create `rfqs(id,listing_id,buyer_id,quantity,notes,status,created_at)` migration. Acceptance: migration adds table."
Phase 16 — Growth & Trust,T095,API: create RFQ and notify sellers,feat/api-rfq-create,feat: POST /api/rfqs,"Endpoint to create rfq, validate ownership, insert and trigger notification to seller(s). Acceptance: RFQ created + notification entry."
Phase 16 — Growth & Trust,T096,UI: RFQ form on listing,feat/ui-rfq-form,feat: small RFQ modal,"Add RFQ CTA on listing that opens modal to submit RFQ. Acceptance: modal submits and shows success."
Phase 16 — Growth & Trust,T097,Feature: invoice/PO PDF stub,feat/invoice-pdf-stub,feat: generate invoice download link,"Add endpoint that renders simple invoice JSON→PDF stub (no styling) saved to signed URL. Acceptance: endpoint returns signed url for sample order."
Phase 16 — Growth & Trust,T098,UI: download PO/invoice on order page,feat/ui-order-invoice-link,feat: add download button,"Add small download button on order detail linking to invoice endpoint. Acceptance: button calls endpoint and shows link."
Phase 16 — Growth & Trust,T099,DB: buyer_preapproved flag,feat/db-buyer-qualification,chore: add preapproved to profiles,"Add `is_preapproved boolean default false` to `profiles`. Acceptance: column present after migration."
Phase 16 — Growth & Trust,T100,Admin: mark buyer pre-approval,feat/admin-buyer-approve,feat: admin toggle pre-approve,"Add action in /admin/kyc or profile table to mark preapproved. Acceptance: toggling writes to profile and audit_log."
Phase 16 — Growth & Trust,T101,UI: show preapproved badge on buyer profile,feat/ui-buyer-preapproved-badge,feat: show badge,"Display badge on buyer profile and checkout gating checks. Acceptance: badge visible when flag true."
Phase 16 — Growth & Trust,T102,API: CSV upload endpoint for listings,feat/api-listings-import,feat: POST /api/listings/import,"Endpoint to accept CSV and handle metadata + images manifest; return job id. Acceptance: accepted file stored and job id returned."
Phase 16 — Growth & Trust,T103,UI: CSV mapping preview modal,feat/ui-listings-import-mapping,feat: mapping UI,"Add small import modal to upload CSV and map columns to fields with preview row. Acceptance: mapping saved and API called."
Phase 16 — Growth & Trust,T104,Worker: process listings CSV (skeleton),feat/job-listings-import,feat: background import processor,"Worker reads CSV job, validates rows (Zod), inserts listings, uploads images via provided URLs. Acceptance: dry-run validates rows and reports errors."
Phase 16 — Growth & Trust,T105,Tests: CSV import validation tests,feat/test-listings-import,chore: add unit tests for CSV parsing,"Add tests for mapping logic and validation edge cases. Acceptance: tests pass locally."
Phase 16 — Growth & Trust,T106,API: pricing suggestion endpoint,feat/api-price-suggest,feat: GET /api/price/suggest,"Return suggested price based on material and T059 metrics. Acceptance: returns suggestion for sample material."
Phase 16 — Growth & Trust,T107,UI: show suggested price hint in listing form,feat/ui-price-suggestion,feat: non-intrusive hint,"Show suggested price next to price input with small 'apply' button. Acceptance: clicking copies suggested value to price input."
Phase 16 — Growth & Trust,T108,DB: schedule_at and expiry_at for listings,feat/db-listing-schedule,chore: add schedule fields,"Add `schedule_at timestamptz NULL` and `expiry_at timestamptz NULL` to `listings`. Acceptance: migration adds fields."
Phase 16 — Growth & Trust,T109,Worker: scheduled publish/expiry runner,feat/job-listing-scheduler,feat: cron to publish/expire listings,"Create scheduled job to flip listing status based on schedule/expiry. Acceptance: dry-run shows to-be-changed listings."
Phase 16 — Growth & Trust,T110,UI: schedule fields on create/edit listing,feat/ui-listing-schedule,feat: add datepickers,"Add schedule + expiry inputs in listing create/edit forms. Acceptance: values saved to DB."
Phase 16 — Growth & Trust,T111,Analytics: view/save/contact counters (DB),feat/db-analytics-counters,chore: add counters,"Add `listing_views`, `listing_saves` counters or events table. Acceptance: DB change applied."
Phase 16 — Growth & Trust,T112,API: analytics endpoints for seller,feat/api-analytics-seller,feat: GET /api/analytics/seller,"Return basic lead analytics: views, saves, contacts for seller. Acceptance: endpoint returns sample counts."
Phase 16 — Growth & Trust,T113,UI: export leads CSV button,feat/ui-export-leads,feat: export button on seller dashboard,"Add export button that streams CSV from API. Acceptance: API returns CSV with sample rows."
Phase 16 — Growth & Trust,T114,DB: moderation queue flag,feat/db-moderation-queue,chore: add moderation fields,"Add `needs_moderation boolean` and `moderation_notes` to `listings`. Acceptance: columns added."
Phase 16 — Growth & Trust,T115,UI: bulk edit modal (skeleton),feat/ui-bulk-edit-modal,feat: simple bulk edit UI,"Add admin bulk edit modal to change status/price for selected listings. Acceptance: modal performs batch request returning summary."
Phase 16 — Growth & Trust,T116,Worker: bulk edit apply job,feat/job-bulk-edit,feat: background apply for bulk changes,"Implement worker that accepts bulk edit job and applies changes; idempotent. Acceptance: worker logs summary on dry-run."
Phase 16 — Growth & Trust,T117,DB/UI: pickup scheduling for large lots,feat/pickup-scheduling,chore: reuse inspection slots,"Expose `pickup_slots` or reuse inspection booking UI for pickups; add small API. Acceptance: buyer can request pickup slot entry stored."
Phase 16 — Growth & Trust,T118,API: pickup confirmation notification,feat/notify-pickup,feat: notify seller & buyer,"Trigger notifications on pickup booking with template. Acceptance: notifications inserted."
Phase 16 — Growth & Trust,T119,Settings/UI: PCI & privacy compliance flags,feat/settings-compliance-flags,feat: add compliance toggles,"Add app_settings keys for pci_compliant (bool), privacy_audit_last (ts); small admin UI to show status. Acceptance: settings editable and visible."
Phase 16 — Growth & Trust,T120,Audit: compliance audit trail entry,feat/audit-compliance-log,chore: log compliance changes,"Write audit_log entry when compliance flags change. Acceptance: audit entries created with actor and before/after."
Phase 16 — Growth & Trust,T121,Flow: onboarding workflow state machine,feat/onboarding-workflow,feat: add state to profiles,"Add `onboarding_state` to `profiles` and small helper to progress steps. Acceptance: field updates on step completion."
Phase 16 — Growth & Trust,T122,Notifications: onboarding automation triggers,feat/notify-onboarding,feat: send reminders,"Add notification triggers for each onboarding step (KYC pending, docs missing). Acceptance: notifications created on simulated events."
Phase 16 — Growth & Trust,T123,Admin: onboarding queue view,feat/admin-onboarding-queue,feat: admin list to review stalled onboarding,"Add small admin page listing incomplete onboarding with quick actions. Acceptance: list loads and actions update state."
Phase 16 — Growth & Trust,T124,Job: auto-run KYC checks (skeleton),feat/job-kyc-autocheck,feat: basic checks runner,"Worker stub to run automated checks (filename pattern, size) and flag for review. Acceptance: dry-run marks sample uploads."
Phase 16 — Growth & Trust,T125,DB: reviews table tied to orders,feat/db-reviews,chore: add reviews table,"Create `reviews(id,order_id,author_id,subject_id,rating,body,created_at)` and ensure only allowed post-order. Acceptance: migration adds table."
Phase 16 — Growth & Trust,T126,API: post-review (order-locked),feat/api-post-review,feat: POST /api/reviews,"Endpoint validates order is completed and author participated; insert review. Acceptance: review saved and visible via API."
Phase 16 — Growth & Trust,T127,UI: review widget on order and seller profile,feat/ui-review-widget,feat: add small rating UI,"Add simple star rating + comment on order complete page and show latest on seller card. Acceptance: submit stores review."
Phase 16 — Growth & Trust,T128,Settings: insurance option toggle + price addon,feat/settings-insurance,feat: app_settings & price add-on,"Add settings for optional insurance percent and label; acceptance: setting stored and returned by /api/settings."
Phase 16 — Growth & Trust,T129,UI: insurance checkbox at checkout,feat/ui-checkout-insurance,feat: add optional insurance line item,"Show checkbox adding insurance line and adjust PaymentIntent amount. Acceptance: selection reflected in payment amount."
Phase 16 — Growth & Trust,T130,Lib: multi-currency display helper,feat/lib-currency-helper,feat: price conversion helper,"Add small helper to convert using fixed exchange rates from settings. Acceptance: returns converted amount for sample input."
Phase 16 — Growth & Trust,T131,Settings: default currency and FX rate keys,feat/settings-currency,feat: add keys,"Add `currency.default`, `currency.rates` to app_settings; acceptance: settings readable via API."
Phase 16 — Growth & Trust,T132,UI: currency selector and converted price hint,feat/ui-currency-selector,feat: small selector in navbar,"Show currency selector and convert listing prices client-side via API. Acceptance: hint shows converted amount."
Phase 16 — Growth & Trust,T133,DB/API: support tickets table and create endpoint,feat/db-support-tickets,feat: add tickets,"Create `support_tickets(id, user_id, subject, body, status, created_at)` and POST endpoint. Acceptance: ticket created and returned."
Phase 16 — Growth & Trust,T134,Admin: support inbox view,feat/admin-support-inbox,feat: admin ticket viewer,"Add simple /admin/support page to view and respond. Acceptance: admin reply creates ticket note and notification."
Phase 16 — Growth & Trust,T135,PWA: manifest + service worker stub,feat/pwa-manifest-sw,feat: add basic PWA support,"Add `manifest.json`, register service worker to cache assets; acceptance: manifest served and SW registers in dev."
Phase 16 — Growth & Trust,T136,UI: responsive listing preview improvements,feat/ui-responsive-previews,feat: small CSS + a11y tweaks,"Tweak listing card CSS for small screens and add skip-to-content. Acceptance: mobile viewport shows improved layout."
Phase 16 — Growth & Trust,T137,Test: offline listing preview smoke test,feat/test-pwa-offline,chore: add manual e2e checklist,"Add short e2e/manual checklist verifying offline listing preview (cached). Acceptance: checklist passed locally."
Phase 16 — Growth & Trust,T138,UI: deposit status consolidated component,feat/ui-deposit-status,feat: one-click view,"Create consolidated deposit status component combining PaymentIntent state & order fields. Acceptance: component shows auth/capture/refund states."
Phase 16 — Growth & Trust,T139,API: deposit status aggregation endpoint,feat/api-deposit-status,feat: GET /api/deposits/:orderId/status,"Return summarized deposit state for UI. Acceptance: endpoint returns expected fields for sample order."
Phase 16 — Growth & Trust,T140,API: save payment method consent flow (stub),feat/api-save-payment-consent,feat: POST /api/payments/save-consent,"Add endpoint to record consent and link token id (no PCI handling). Acceptance: consent saved and returned."
Phase 16 — Growth & Trust,T141,UI: toggle to save payment method,feat/ui-save-payment-toggle,feat: add small toggle in checkout,"Add UI toggle and call consent endpoint. Acceptance: toggle stores preference."
Phase 16 — Growth & Trust,T142,Lib: tax fields on invoice model,feat/lib-invoice-tax,feat: add tax fields,"Add `tax_percent` and tax breakdown to invoice model & serializer. Acceptance: invoice JSON includes tax lines."
Phase 16 — Growth & Trust,T143,Helper: tax calc stub,feat/lib-tax-calc,feat: basic tax computation helper,"Add small helper applying tax percent to subtotal; unit test included. Acceptance: test passes."
Phase 16 — Growth & Trust,T144,Feature: attach PDF receipt to order,feat/order-receipt-pdf,feat: render receipt PDF & attach signed URL,"Add endpoint to render receipt PDF and attach URL to order record. Acceptance: order.receipt_url populated for sample order."
